---
# tasks file for nvim

- name: Create efm-langserver direcory
  ansible.builtin.file:
    path: '$HOME/.local/bin'
    state: directory
    mode: '0755'

- name: Download efm-langserver release binary
  ansible.builtin.unarchive:
    src: "https://github.com/mattn/efm-langserver/releases/download/v0.0.38/efm-langserver_v0.0.38_linux_amd64.tar.gz"
    dest: $HOME/.local/bin
    remote_src: yes
    extra_opts: [--strip-components=1]

- name: Add efm-langserver to system-wide $PATH
  become: true
  ansible.builtin.copy:
    dest: /etc/profile.d/efm-langserver.sh
    content: "export PATH=$HOME/.local/bin:$PATH\n"

- name: Clone Packer repository
  ansible.builtin.git:
    repo: https://github.com/wbthomason/packer.nvim
    dest: '$HOME/.local/share/nvim/site/pack/packer/start/packer.nvim'
    version: master
    depth: 1

- name: Create NeoVim config root directory.
  ansible.builtin.file:
    path: '{{ nvim_config_dir }}'
    state: directory
    # owner: '{{ ansible_user_id }}'

- name: Create NeoVim config directories.
  ansible.builtin.file:
    path: '{{ nvim_config_dir }}/{{ item }}'
    state: directory
    mode: '0755'
    # owner: '{{ ansible_user_id }}'
  loop:
    - 'sessions'
    - 'undodir'

- name: Copy Lua configuration files
  ansible.builtin.copy:
    src: '{{ item.src }}'
    dest: '{{ nvim_config_dir }}/{{ item.dest }}/'
    mode: '{{ item.mode }}'
  loop:
    # - { src: 'lua/init.lua', dest: '/', mode: '0644' }
    # - { src: 'lua/after/', dest: 'after/', mode: '0644' }
    # - { src: 'lua/ftplugin/', dest: 'ftplugin/', mode: '0644' }
    - { src: 'lua-{{ nvim_environment }}/', dest: '/', mode: '0644' }
  when: nvim_config_in_lua | bool
  notify:
    # - packer complete
    - packer install
    - packer update
    - packer compile

# TODO: I don't think this should be there at all.
- name: Add 'vim' alias
  ansible.builtin.lineinfile:
    path: '$HOME/.zshrc'
    line: 'alias vim="nvim"'
    # owner: '{{ ansible_user_id }}'
    regexp: '^alias vim="nvim"$'
    state: present
    insertafter: '^# Aliases'
    # create: True
  when: nvim_vim_alias | bool
