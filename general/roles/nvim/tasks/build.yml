---
# tasks file for nvim

- name: Install build prerequisites
  become: true
  ansible.builtin.dnf:
    name: '{{ item }}'
    state: present
  loop:
    '{{ build_packages }}'

- name: Get package facts
  ansible.builtin.package_facts:
    manager: rpm

- name: Remove default NeoVim package if exists
  become: true
  ansible.builtin.dnf:
    name: neovim
    state: absent
  when: '"neovim" in ansible_facts.packages'

- name: Clone NeoVim repository
  ansible.builtin.git:
    repo: https://github.com/neovim/neovim.git
    dest: '$HOME/code/github.com/neovim/neovim'
    version: master
    depth: 1
  register: nvim_repo

- name: Cleanup build artifacts
  ansible.builtin.file:
    path: '{{ item }}'
    state: absent
  loop:
    - '$HOME/code/github.com/neovim/neovim/.deps'
    - '$HOME/code/github.com/neovim/neovim/build'
  when: nvim_repo.changed

- name: Build NeoVim from source
  community.general.make:
    chdir: '$HOME/code/github.com/neovim/neovim'
    target: nvim
    params:
      CMAKE_BUILD_TYPE: RelWithDebInfo
  when:
    - nvim_repo.changed
    - '"neovim" not in ansible_facts.packages'

- name: Install latest version of NeoVim
  become: true
  community.general.make:
    chdir: '/home/{{ ansible_user_id }}/code/github.com/neovim/neovim'
    target: install
  when:
    - nvim_repo.changed
    - '"neovim" not in ansible_facts.packages'
